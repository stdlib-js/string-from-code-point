// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-unicode-max@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-unicode-max-bmp@esm/index.mjs";var n=e.isPrimitive,o=t,d=r,a=s,m=i,l=String.fromCharCode;var p=function(e){var t,r,s,i,p;if(1===(t=arguments.length)&&o(e))t=(s=arguments[0]).length;else for(s=[],p=0;p<t;p++)s.push(arguments[p]);if(0===t)throw new Error("insufficient arguments. Must provide either an array of code points or one or more code points as separate arguments.");for(r="",p=0;p<t;p++){if(i=s[p],!n(i))throw new TypeError(d("invalid argument. Must provide valid code points (i.e., nonnegative integers). Value: `%s`.",i));if(i>a)throw new RangeError(d("invalid argument. Must provide a valid code point (i.e., cannot exceed %u). Value: `%s`.",a,i));r+=i<=m?l(i):l(55296+((i-=65536)>>10),56320+(1023&i))}return r};export{p as default};
//# sourceMappingURL=index.mjs.map
